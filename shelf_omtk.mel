global proc shelf_omtk () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "from maya import cmds\n \nsFile = cmds.file(q=True, sceneName=True)\ncmds.file(sFile, open=True, force=True)" 
        -enableBackground 0
        -align "center" 
        -label "from maya import cmds\n \nsFile = cmds.file(q=True, sceneName=True..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 1 0 0 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "reload_scene.png" 
        -image1 "reload_scene.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from maya import cmds\n \nsFile = cmds.file(q=True, sceneName=True)\ncmds.file(sFile, open=True, force=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "# Build Rig\nimport pymel.core as pymel\nfrom omtk.rigging import AutoRig\nfrom omtk.vendor import libSerialization\n\nnetworks = libSerialization.get_networks_from_class('RigRoot')\nfor network in networks:\n    rigroot = libSerialization.importFromNetwork(network)\n    rigroot.Build()\n    pymel.delete(network)\n    libSerialization.exportToNetwork(rigroot)\n\n"
        -enableBackground 0
        -align "center" 
        -label "# Build Rig\nimport pymel.core as pymel\nfrom omtk.rigging import ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_rig_build_all.png" 
        -image1 "omtk_rig_build_all.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload()\nomtk.build_all()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "networks = libSerialization.get_networks_from_class('RigRoot')\nfor network in networks:\n    rigroot = libSerialization.importFromNetwork(network)\n    rigroot.Unbuild()\n    pymel.delete(network)\n    libSerialization.exportToNetwork(rigroot)" 
        -enableBackground 0
        -align "center" 
        -label "networks = libSerialization.get_networks_from_class('RigRoot')\nfor ne..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_rig_unbuild_all.png" 
        -image1 "omtk_rig_unbuild_all.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload()\nomtk.unbuild_all()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import omtk\nomtk._reload()\nomtk.rigging.autorig.show()" 
        -enableBackground 0
        -align "center" 
        -label "import omtk\nomtk._reload()\nomtk.rigging.autorig.show()" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_rig_show.png" 
        -image1 "omtk_rig_show.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload()\nomtk.show()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Build Selected Joints" 
        -enableBackground 0
        -align "center" 
        -label "Build Selected Joints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_rig_build_selection.png" 
        -image1 "omtk_rig_build_selection.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload(); omtk.build_selected()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Unbuild Selected Joints" 
        -enableBackground 0
        -align "center" 
        -label "Unbuild Selected Joints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_rig_unbuild_selection.png" 
        -image1 "omtk_rig_unbuild_selection.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload(); omtk.unbuild_selected()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import omtk; reload(omtk); omtk._reload(); omtk.build_selected()" 
        -enableBackground 0
        -align "center" 
        -label "import omtk; reload(omtk); omtk._reload(); omtk.build_selected()" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "omtk_rig_rebuild_selection.png" 
        -image1 "omtk_rig_rebuild_selection.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload(); omtk.build_selected()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "CalibrateSel Selected Joints" 
        -enableBackground 0
        -align "center" 
        -label "CalibrateSel Selected Joints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_rig_ctrl_calibrate.png" 
        -image1 "omtk_rig_ctrl_calibrate.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk; reload(omtk); omtk._reload(); omtk.calibrate_selected()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Give selected transform shapes to the next selected controller. Only Valid if two transform selected." 
        -enableBackground 0
        -align "center" 
        -label "Controller Match" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "omtk_rig_ctrl_swap.png" 
        -image1 "omtk_rig_ctrl_swap.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from sstk.maya.apis import maya_app; maya_app.run_app(\"MayaAppControllerMatcher\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Bake Selected Ctrls" 
        -enableBackground 0
        -align "center" 
        -label "from omtk.libs import libRigging\n\ndef _fix_ctrl_shape(ctrl):\n   ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "omtk_rig_ctrl_bake.png" 
        -image1 "omtk_rig_ctrl_bake.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk\nomtk.run_macro('ctrls_bake_selected')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mirror shapes of Ctrl to another controller. Using the prefix ['L','R']" 
        -enableBackground 0
        -align "center" 
        -label "Controller Mirror" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "omtk_rig_ctrl_mirror.png" 
        -image1 "omtk_rig_ctrl_mirror.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk\nomtk.run_macro(\"ctrls_mirror_selected\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select a mesh and an interactive facial controller. This will change what mesh the controller is following." 
        -enableBackground 0
        -align "center" 
        -label "IController Mesh Swap" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "omtk_rig_ictrl_swap_mesh.png" 
        -image1 "omtk_rig_ictrl_swap_mesh.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk\nomtk.run_macro('ctrls_interactive_swap_mesh')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import omtk\nomtk.run_macro(\"avar_selection_toggle\")" 
        -enableBackground 0
        -align "center" 
        -label "import omtk\nomtk.run_macro(\"avar_selection_toggle\")" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "omtk_rig_select_avar.png" 
        -image1 "omtk_rig_select_avar.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import omtk\nomtk.run_macro(\"avar_selection_toggle\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "from omtk.animation import ikfkTools\nikfkTools.switchToIk()" 
        -enableBackground 0
        -align "center" 
        -label "from omtk.animation import ikfkTools\nikfkTools.switchToIk()" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_anm_switch_ik.png" 
        -image1 "omtk_anm_switch_ik.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from omtk.animation import ikfkTools\nikfkTools.switchToIk()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "from omtk.animation import ikfkTools\nikfkTools.switchToFk()" 
        -enableBackground 0
        -align "center" 
        -label "from omtk.animation import ikfkTools\nikfkTools.switchToFk()" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_anm_switch_fk.png" 
        -image1 "omtk_anm_switch_fk.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from omtk.animation import ikfkTools\nikfkTools.switchToFk()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "from omtk.animation import mirrorPose; reload(mirrorPose)\nimport pymel.core as pymel\nmirrorPose.mirror_objs(pymel.selected())" 
        -enableBackground 0
        -align "center" 
        -label "from omtk.animation import mirrorPose; reload(mirrorPose)\nimport..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "omtk_anm_ctrl_mirror.png" 
        -image1 "omtk_anm_ctrl_mirror.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from omtk.animation import mirrorPose; reload(mirrorPose)\nimport pymel.core as pymel\nmirrorPose.mirror_objs(pymel.selected())" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
